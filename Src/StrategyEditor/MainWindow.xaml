<Window x:Class="StrategyEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StrategyEditor"
        xmlns:converters="clr-namespace:Hallupa.Library.UI.Converters;assembly=Hallupa.Library.UI"
        xmlns:viewModels1="clr-namespace:StrategyEditor.ViewModels"
        xmlns:charting="clr-namespace:TraderTools.Core.UI;assembly=TraderTools.Core.UI"
        xmlns:ui="clr-namespace:Hallupa.Library.UI;assembly=Hallupa.Library.UI"
        mc:Ignorable="d"
        Title="Strategy Editor" Height="1000" Width="1200"
        WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Grid>
        <Grid.Resources>
            <converters:ObjectToVisibilityConverter x:Key="ObjToVis"/>
            <converters:ObjectToBoolConverter x:Key="ObjToBool"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Ribbon x:Name="RibbonWin" Grid.Row="0" SelectedIndex="0">

            <RibbonTab Header="Page">
                <RibbonGroup Header="Trades">
                    <RibbonButton Label="View trade" Command="{Binding UIService.ViewTradeCommand}" IsEnabled="{Binding UIService.IsViewTradeEnabled}"/>
                </RibbonGroup>

                <RibbonGroup Header="Pages">
                    <RibbonToggleButton Label="Strategy" IsChecked="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToBool}, ConverterParameter={x:Static viewModels1:DisplayPages.RunCustomStrategy}, Mode=TwoWay}"/>
                    <RibbonToggleButton Label="Results" IsChecked="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToBool}, ConverterParameter={x:Static viewModels1:DisplayPages.RunStrategyResults}, Mode=TwoWay}"/>
                    <RibbonToggleButton Label="Results chart" IsChecked="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToBool}, ConverterParameter={x:Static viewModels1:DisplayPages.RunStrategyResultsChart}, Mode=TwoWay}"/>
                    <RibbonToggleButton Label="Machine learning" IsChecked="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToBool}, ConverterParameter={x:Static viewModels1:DisplayPages.MachineLearning}, Mode=TwoWay}"/>
                </RibbonGroup>

                <RibbonGroup Header="Strategies" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.RunCustomStrategy}, Mode=OneWay}">
                    <RibbonButton Label="Save" Command="{Binding Path=Content.DataContext.SaveCommand, ElementName=StrategyRunView}"/>
                    <RibbonButton Label="Create" Command="{Binding Path=Content.DataContext.CreateStrategyCommand, ElementName=StrategyRunView}"/>
                    <RibbonButton Label="Delete" Command="{Binding Path=Content.DataContext.DeleteStrategyCommand, ElementName=StrategyRunView}"/>
                    <RibbonButton Label="Run" Command="{Binding Path=Content.DataContext.RunStrategyCommand, ElementName=StrategyRunView}" IsEnabled="{Binding Path=Content.DataContext.RunStrategyEnabled, ElementName=StrategyRunView}"/>
                    <RibbonButton Label="Stop" Command="{Binding Path=Content.DataContext.StopStrategyCommand, ElementName=StrategyRunView}" IsEnabled="{Binding Path=Content.DataContext.StopStrategyEnabled, ElementName=StrategyRunView}"/>
                </RibbonGroup>

                <RibbonGroup Header="Chart">
                    <RibbonToggleButton Label="Add Line" IsChecked="{Binding ChartingService.ChartMode, Converter={StaticResource ObjToBool}, ConverterParameter={x:Static charting:ChartMode.AddLine}, Mode=TwoWay}"/>
                    <RibbonToggleButton Label="Zoom" IsChecked="{Binding ChartingService.ChartMode, Converter={StaticResource ObjToBool}, ConverterParameter={x:Static charting:ChartMode.Zoom}, Mode=TwoWay}"/>
                    <RibbonButton Label="Clear results chart" Command="{Binding Path=Content.DataContext.ClearResultsChartCommand, ElementName=StrategyRunResultsChartView}"/>
                    <RibbonToggleButton Label="Use Heiken Ashi" IsChecked="{Binding UIService.UseHeikenAshi, Mode=TwoWay}"/>
                </RibbonGroup>

                <RibbonGroup Header="Candles">
                    <RibbonButton Label="{Binding LoginOutViewModel.LoginOutButtonText}" Command="{Binding LoginOutViewModel.LoginOutCommand}"/>
                    <RibbonButton Label="Update candles" Command="{Binding UpdateFXCandlesCommand}"/>
                </RibbonGroup>

                <RibbonGroup Header="Point group" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.MachineLearning}, Mode=OneWay}">
                    <RibbonButton Label="Create point group" Command="{Binding Content.DataContext.CreatePointSetCommand, ElementName=MachineLearningView}"/>
                    <RibbonButton Label="Delete point group" Command="{Binding Content.DataContext.DeletePointSetCommand, ElementName=MachineLearningView}"/>
                </RibbonGroup>

                <RibbonGroup Header="Points" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.MachineLearning}, Mode=OneWay}">
                    <RibbonToggleButton Label="Create point"
                                        Command="{Binding Content.DataContext.CreatePointCommand, ElementName=MachineLearningView}"
                                        IsChecked="{Binding Content.DataContext.CreatingPoint, ElementName=MachineLearningView}"/>
                </RibbonGroup>

                <RibbonGroup Header="ML" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.MachineLearning}, Mode=OneWay}">
                    <RibbonButton Label="Train" Command="{Binding Content.DataContext.TrainCommand, ElementName=MachineLearningView}"/>
                    <RibbonButton Label="Test" Command="{Binding Content.DataContext.TestCommand, ElementName=MachineLearningView}"/>
                </RibbonGroup>

                <RibbonGroup Header="Chart" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.MachineLearning}, Mode=OneWay}">
                    <ComboBox ItemsSource="{Binding Content.DataContext.Chart.TimeframeOptions, ElementName=MachineLearningView}"
                               SelectedItem="{Binding Content.DataContext.Chart.SelectedTimeframe, ElementName=MachineLearningView}"/>
                    <RibbonButton Label="View market" Command="{Binding Content.DataContext.Chart.ViewMarketCommand, ElementName=MachineLearningView}"/>
                    <RibbonTextBox Label="Market" Text="{Binding Content.DataContext.Chart.Market, ElementName=MachineLearningView}"/>
                    <RibbonToggleButton Label="Heiken Ashi" IsChecked="{Binding Content.DataContext.Chart.UseHeikenAshi, ElementName=MachineLearningView, Mode=TwoWay}"/>
                </RibbonGroup>

            </RibbonTab>
        </Ribbon>

        <Grid Grid.Row="1">
            <Frame x:Name="StrategyRunResults" Source="Views/StrategyRunResultsView.xaml" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.RunStrategyResults}, Mode=OneWay}"/>
            <Frame x:Name="StrategyRunResultsChartView" Source="Views/StrategyRunResultsChartView.xaml" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.RunStrategyResultsChart}, Mode=OneWay}"/>
            <Frame x:Name="StrategyRunView" Source="Views/StrategyRunView.xaml" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.RunCustomStrategy}, Mode=OneWay}"/>
            <Frame x:Name="MachineLearningView" Source="Views/MachineLearningView.xaml" Visibility="{Binding UIService.SelectedDisplayPage, Converter={StaticResource ObjToVis}, ConverterParameter={x:Static viewModels1:DisplayPages.MachineLearning}, Mode=OneWay}"/>
        </Grid>

        <ui:LogControl Grid.Row="2" ShowExpanded="True"/>
    </Grid>
</Window>