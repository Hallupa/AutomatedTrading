using System.Collections.Generic;
using TraderTools.Basics;
using TraderTools.Basics.Extensions;
using TraderTools.Core.Extensions;
using TraderTools.Core.Trading;

namespace AutomatedTraderDesigner
{
    public class NewStrategy : IStrategy
    {
        public string Name => "Sample";

        public Timeframe[] CandleTimeframesRequired => new[] { Timeframe.H4, Timeframe.H2, Timeframe.D1 };

        public TimeframeLookup<Indicator[]> CreateTimeframeIndicators()
        {
            return new TimeframeLookup<Indicator[]>
            {
                [Timeframe.H2] = new[] { Indicator.EMA8, Indicator.EMA25, Indicator.EMA50, Indicator.ATR },
                [Timeframe.H4] = new[] { Indicator.EMA8, Indicator.EMA25, Indicator.EMA50, Indicator.ATR },
                [Timeframe.D1] = new[] { Indicator.EMA8, Indicator.EMA25, Indicator.EMA50, Indicator.ATR }
            };
        }

        public List<TradeDetails> CreateNewTrades(MarketDetails market,
            TimeframeLookup<List<BasicCandleAndIndicators>> candlesLookup, List<TradeDetails> existingTrades, ITradeDetailsAutoCalculatorService calculator)
        {
            return null;
        }

        public void UpdateExistingOpenTrades(TradeDetails trade, string market, TimeframeLookup<List<BasicCandleAndIndicators>> candles)
        {
        }
    }
}